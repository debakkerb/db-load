# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: blog
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS blog;
    USE blog;
    CREATE TABLE IF  NOT EXISTS blogposts (id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, title VARCHAR(100) NOT NULL, intro TEXT NOT NULL, content TEXT NOT NULL, created DATETIME NOT NULL);
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-volumeclaim
  namespace: blog
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard-rwo
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: blog
  labels:
    app: mysql
spec:
  type: ClusterIP
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: blog
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          args:
            - "--default-authentication-plugin=mysql_native_password"
          env:
            - name: MYSQL_DATABASE
              value: blog
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql-db-credentials
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: blog-password
                  name: mysql-db-credentials
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: root-password
                  name: mysql-db-credentials
          ports:
          - containerPort: 3306
            name: mysql
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
          - mountPath: /docker-entrypoint-initdb.d
            name: mysql-initdb
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-volumeclaim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
